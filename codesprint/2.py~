import Queue
from Queue import *

#import sys

def printShortestPath(n, i_start, j_start, i_end, j_end):
    #  Print the distance along with the sequence of moves.
    a, b, c, d = i_start, j_start, i_end, j_end
    l, m, r = [], [], []
    q = Queue()
    for i in range (n) :
	    l.append(0)
    for i in range (n) :
	    m.append(l)
    r.append(a)
    r.append(b)
    q.put(r)
    while not q.empty() :
	    x = q.get()
	    m[x[0]][x[1]] = 1
	    if c == x[0] and d == x[1] :
		    break
	    else :
		    if x[0]-2 >= 0 :
			    if x[1] + 1 < n :
				    y.append(x[0]-2)
				    y.append(x[1]+1)
				    q.put(y)
				    y = []
			    if x[1] - 1 >= 0 :
				    q.put(x)
		    if x[0]+2 < n :
			    if x[1] + 1 < n :
				    q.put(x)
			    if x[1] - 1 >= 0 :
				    q.put(x)
		    if x[1] + 2 < n :
			    q.put(x)
		    if x[1] - 2 >= 0 :
			    q.put(x)
			

    

if __name__ == "__main__":
    n = int(raw_input().strip())
    i_start, j_start, i_end, j_end = raw_input().strip().split(' ')
    i_start, j_start, i_end, j_end = [int(i_start), int(j_start), int(i_end), int(j_end)]
    printShortestPath(n, i_start, j_start, i_end, j_end)

